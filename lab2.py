# -*- coding: utf-8 -*-
"""LAB2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wVCsb8BkDmhWqimWmE4_1TYOMixBx4A_

# **List**
"""

# Function to calculate sum, maximum, and minimum
def calculate(numbers):
    total_sum = sum(numbers)
    maximum_value = max(numbers)
    minimum_value = min(numbers)

    return total_sum, maximum_value, minimum_value

# Main function with predefined values
def main():
    # Predefined list of numbers
    numbers = [5, 12, 7, 3, 9, 15, 8]

    # Call the calculate function
    total_sum, maximum_value, minimum_value = calculate(numbers)

    # Display the results
    print(f"Numbers: {numbers}")
    print(f"Sum: {total_sum}")
    print(f"Maximum: {maximum_value}")
    print(f"Minimum: {minimum_value}")

# Run the program
if __name__ == "__main__":
    main()

"""# **Tuples**"""

# Program to create a tuple of fruits
def main():
    # Creating a tuple of fruits
    fruits = ("apple", "banana", "cherry", "orange", "grape")

    # Displaying the tuple
    print("Tuple of fruits:", fruits)

    # Accessing elements from the tuple
    print("\nAccessing elements from the tuple:")
    for fruit in fruits:
        print(fruit)

    # Example of accessing a specific fruit by index
    print("\nAccessing a specific fruit (index 2):", fruits[2])  # This will print 'cherry'

# Run the program
if __name__ == "__main__":
    main()

# Program to create a tuple with characters 'a', 'b', 'c', 'd'
def main():
    # Creating the tuple
    letters = ('a', 'b', 'c', 'd')

    # Printing the tuple
    print("Tuple contents:", letters)

# Run the program
if __name__ == "__main__":
    main()

"""# **Numpy**

### **Sets**
"""

# Program to create sets with common and unique elements

def main():
    # Define two sets
    set1 = {"apple", "banana", "cherry", "mango"}
    set2 = {"banana", "cherry", "orange", "grape"}

    # Display original sets
    print("Set 1:", set1)
    print("Set 2:", set2)

    # Find common elements (intersection)
    common_elements = set1.intersection(set2)
    print("\nCommon elements:", common_elements)

    # Find unique elements (symmetric difference)
    unique_elements = set1.symmetric_difference(set2)
    print("Unique elements (in either Set 1 or Set 2, but not both):", unique_elements)

# Run the program
if __name__ == "__main__":
    main()

"""# **Dictionaries**"""

# Program to print keys and values from a dictionary

def main():
    # Create a dictionary
    fruits = {
        "apple": "red",
        "banana": "yellow",
        "grape": "purple",
        "orange": "orange"
    }

    # Print each key and value
    print("Fruits and their colors:")
    for key, value in fruits.items():
        print(f"{key} -> {value}")

# Run the program
if __name__ == "__main__":
    main()

"""# **Matplotlib**"""